package com.dbkynd.discordallowlist.discord;

import com.dbkynd.discordallowlist.DiscordAllowList;
import com.dbkynd.discordallowlist.config.DiscordConfig;
import com.dbkynd.discordallowlist.config.MySQLConfig;
import com.dbkynd.discordallowlist.http.ImageDownloader;
import com.dbkynd.discordallowlist.http.WebRequest;
import com.dbkynd.discordallowlist.mojang.MojangJSON;
import com.dbkynd.discordallowlist.whitelist.WhiteList;
import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.entities.MessageEmbed;
import net.dv8tion.jda.api.events.interaction.SlashCommandEvent;
import net.dv8tion.jda.api.interactions.InteractionHook;
import org.apache.logging.log4j.Logger;

import java.util.List;

public class AddMeCommandHandler {
    private static final Logger LOGGER = DiscordAllowList.LOGGER;
    private static final WebRequest request = new WebRequest();

    public static void action(SlashCommandEvent event, String ign) {
        event.deferReply().queue();
        InteractionHook hook = event.getHook();

        String channelId = event.getChannel().getId();

        LOGGER.info("/" + event.getName() + " " + ign + " issued from " + event.getUser().getName() + " in channel: " + channelId);

        // Make sure the command was ran from a channel we allow
        List<String> channelList = DiscordConfig.getAllowedChannels();

        if (!channelList.contains(channelId)) {
            LOGGER.info("Commands from channel: " + channelId + " are not allowed.");
            hook.sendMessage("The /addme command is not allowed from this channel.\nPlease talk to your server admin to find out what the proper channel is.").queue();
            return;
        }

        // Get the user data from the Mojang API
        MojangJSON mojang = request.getMojangData(ign);

        // Tell the discord member we cannot find any data for the username they submitted
        if (mojang == null || mojang.getId() == null) {
            hook.sendMessage("Unable to get Mojang data for username **" + ign + "**.").queue();
            return;
        }

        String thumbnail = "https://crafatar.com/renders/body/" + mojang.getId();
        // Try to download the image so that it's in craftatar's cache for when Discord asks for it to embed.
        // I think when discord tries to embed the image it doesn't wait for it to be generated by craftatar
        // like it would for a web client. And therefor even though the url is valid, Discord was not showing the thumbnail
        // reliably, but now seems to. :D
        ImageDownloader.main(thumbnail);

        // Save to database
        String tableName = MySQLConfig.table.get();
        String discordId = event.getUser().getId();
        try {
            if (DiscordAllowList.getSql().itemExists("DiscordId", discordId, tableName)) {
                DiscordAllowList.getSql().set("MinecraftName", mojang.getName().toLowerCase(), "DiscordId", "=", discordId, tableName);
                DiscordAllowList.getSql().set("UUID", mojang.getUUID(), "DiscordId", "=", discordId, tableName);
            } else {
                DiscordAllowList.getSql().update("INSERT INTO " + tableName + " (DiscordId,MinecraftName,UUID) VALUES ('" + discordId + "','" + mojang.getName().toLowerCase() + "','" + mojang.getUUID().toString() + "');");
            }
        } catch (Exception e) {
            e.printStackTrace();
            hook.sendMessage("There was an error updating the Minecraft user database with username **" + mojang.getName() + "**.").queue();
            return;
        }

        // Tell the Discord member that everything worked as expected!
        EmbedBuilder builder = new EmbedBuilder();
        builder.setDescription("```" + mojang.getName() + "```\n" + DiscordConfig.embedMessage.get());
        builder.setThumbnail(thumbnail);
        builder.setColor(0x5a9a30);
        MessageEmbed embed = builder.build();

        hook.sendMessageEmbeds(embed).queue();

        WhiteList.reload();
    }
}
